{"id":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","dependencies":[{"name":"/home/nazmul/Documents/dashboardvisualization/example/package.json","includedInParent":true,"mtime":1656994575797},{"name":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/package.json","includedInParent":true,"mtime":1656413072613},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37,"index":52},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/@babel/runtime/helpers/interopRequireDefault.js"},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":10,"column":54,"index":251},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/@babel/runtime/helpers/classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":12,"column":51,"index":346},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/@babel/runtime/helpers/createClass.js"},{"name":"@babel/runtime/helpers/defineProperty","loc":{"line":14,"column":54,"index":441},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/@babel/runtime/helpers/defineProperty.js"},{"name":"../types","loc":{"line":16,"column":21,"index":506},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/types.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}}],"sources":{"../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;"},"lineCount":305}},"error":null,"hash":"b37c89cfe3fb93773a8e0d7af2269251","cacheData":{"env":{}}}