{"id":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","dependencies":[{"name":"/home/nazmul/Documents/dashboardvisualization/example/package.json","includedInParent":true,"mtime":1656994575797},{"name":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/package.json","includedInParent":true,"mtime":1656413072613},{"name":"./types","loc":{"line":9,"column":21,"index":306},"parent":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","resolved":"/home/nazmul/Documents/dashboardvisualization/node_modules/react-virtualized/dist/commonjs/Grid/types.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}"},"lineCount":47}},"error":null,"hash":"d86f8a1bea030c92019d30b795ba7d8d","cacheData":{"env":{}}}